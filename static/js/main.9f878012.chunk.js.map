{"version":3,"sources":["Tmdb.js","Components/MovieRow.js","Components/FeaturedMovie.js","Components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","itens","getMovieInfo","movieId","type","info","className","results","length","map","item","key","src","poster_path","alt","origina_title","firstDate","Date","first_air_date","genres","i","push","name","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","black","useState","movieList","setMovieList","featuredData","setFeraturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","Math","floor","random","chosen","chosenInfo","loadAll","scrollListener","window","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f878012.chunk.js","sourcesContent":["const API_KEY = '97dcb3873a56a000c20cf1c3d8375e0a';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                itens: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                itens: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                itens: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                itens: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                itens: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Horror',\r\n                itens: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                itens: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentário',\r\n                itens: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt=BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt=BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        return info;\r\n    }\r\n}","import React from 'react';\r\nimport './MovieRow.css';\r\n\r\nexport default ({title, itens}) => {\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listArea\">\r\n                <div className=\"movieRow--list\">\r\n                    {itens.results.length > 0 && itens.results.map((item, key)=>(\r\n                        <div className=\"movieRow--item\">\r\n                            <img key={key} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.origina_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name );\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n            \r\n            <div className=\"featured--vert\">\r\n                <div className=\"featured--horiz\">\r\n                <div className=\"featured--name\"> {item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\"> {item.vote_average} pontos </div>\r\n                        <div className=\"featured--year\"> {firstDate.getFullYear()} </div>\r\n                        <div className=\"featured--seasons\"> {item.number_of_seasons} temporada{item.number_of_seasons > 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"watch--button\">► Assistir</a>\r\n                        <a href={`/list/add${item.id}`} className=\"list--button\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Generos:</strong> {genres.join(', ')} </div>\r\n                </div> \r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'header--black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\"></img>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"Netflix\"></img>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './Components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport Header from './Components/Header';\n\nexport default () => {\n  \n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeraturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(true);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      // pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // pegando o destaque\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].itens.results.length - 1));\n      let chosen = originals[0].itens.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeraturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      {window.scrollY > 80 ? setBlackHeader(true) : setBlackHeader(false)};\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n\n  }, []);\n\n  return(\n    <div className=\"page\">\n      \n      <Header black={blackHeader}/>\n\n      {featuredData && <FeaturedMovie item={featuredData}/>}\n      \n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          <MovieRow key={key} title={item.title} itens={item.itens}/>\n        ))}\n\n      </section>\n\n      <footer>\n          <a>Feito seguindo o </a>\n          <a className=\"footer--link\" href=\"https://youtu.be/tBweoUiMsDg\">tutorial</a>\n          <a> de Bonieky Lacerda: </a>\n      </footer>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}